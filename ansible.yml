- name: provisioning
  hosts: all
  become: yes
  user: vagrant
  vars:
    # 基本
    base_locale: LANG=ja_JP.UTF-8
    base_timezone: Asia/Tokyo
    # PostgreSQL
    dbuser: "postgres"
    dbpass: "postgres"
    dbname: "sample"
    # Laravel
    work_dir: /usr/local/share
    repos_dir: "{{ work_dir }}/phpenv_git"
    phpenv_dir: "{{ work_dir }}/phpenv"
    branch: master
    php_version: 7.2.4
  tasks:
    # 基本 ###################################
    - name: yum update
      yum: 
        name=*
        state=latest

    - name: SELinux無効
      selinux: state=disabled

    - name: locale設定
      command: localectl set-locale {{ base_locale }}
     
    - name: timezone設定
      command: timedatectl set-timezone {{ base_timezone }}

    - name: ntpインストール
      yum: name=ntp state=latest

    - name: ntp設定
      command: ntpdate ntp.nict.jp

    - name: firewalld停止
      command: systemctl stop firewalld
      become_user: root
      become: yes

    - name: firewalld無効
      command: systemctl mask firewalld
      become_user: root
      become: yes

    # PostgreSQL ###################################
    - name: PostgreSQLインストール
      yum: name={{ item }} state=latest
      with_items:
        - postgresql-server
        - postgresql-devel
        - postgresql-contrib
        - python-psycopg2

    - name: PostgreSQL初期化
      shell: service postgresql initdb

    - name: pg_hba.conf Windowsから接続設定
      copy: 
        dest: /var/lib/pgsql/data/pg_hba.conf
        content: "local all all peer\nhost all all 127.0.0.1/32 md5\nhost all all ::1/128 md5\nhost all all all trust"

    - name: postgresql.conf Windowsから接続設定
      lineinfile: dest=/var/lib/pgsql/data/postgresql.conf
        regexp="^#listen_addresses"
        line="listen_addresses = '*'"
        state=present
        backup=yes

    - name: PostgreSQL起動
      service: name=postgresql state=started  enabled=yes

    - name: PostgreSQL sudores設定
      lineinfile: 
        dest: /etc/sudoers.d/postgres 
        owner: root
        group: root
        mode: 0440
        line: "%vagrant ALL=(postgres) NOPASSWD: ALL"
        state: present
        create: yes
        validate: "visudo -cf %s"

    - name: DBユーザ作成
      user: name={{ dbuser }} password={{ dbpass }}

    - name: PostgreSQLユーザ作成
      postgresql_user: 
        name: "{{ dbuser }}"
        password: "{{ dbpass }}"
        state: present
        login_user: postgres
        role_attr_flags: CREATEDB,LOGIN
      become_user: postgres
      become: yes

    - name : 開発用データベース作成
      postgresql_db: 
        name: "{{ dbname }}_development"
        lc_collate: "ja_JP.UTF-8"
        lc_ctype: "ja_JP.UTF-8"
        template: "template0"
        encoding: "UTF-8"
        login_user: postgres
      become_user: postgres
      become: yes

    - name : テスト用データベース作成
      postgresql_db: 
        name: "{{ dbname }}_test"
        lc_collate: "ja_JP.UTF-8"
        lc_ctype: "ja_JP.UTF-8"
        template: "template0"
        encoding: "UTF-8"
        login_user: postgres
      become_user: postgres
      become: yes

    - name : 本番用データベース作成
      postgresql_db: 
        name: "{{ dbname }}_production"
        lc_collate: "ja_JP.UTF-8"
        lc_ctype: "ja_JP.UTF-8"
        template: "template0"
        encoding: "UTF-8"
        login_user: postgres
      become_user: postgres
      become: yes

    # Laravel ###################################
    - name: EPELを追加
      yum: 
        name=epel-release
        state=latest

    - name: PHP依存モジュールインストール
      yum: name={{ item }} state=latest
      with_items:
        - gcc
        - gcc-c++
        - libxml2
        - libxml2-devel
        - libcurl
        - libcurl-devel
        - libpng
        - libpng-devel
        - libmcrypt
        - libmcrypt-devel
        - libtidy
        - libtidy-devel
        - libxslt
        - libxslt-devel
        - libicu-devel
        - libtool-ltdl-devel
        - openssl-devel
        - bison
        - libjpeg-turbo-devel
        - bzip2
        - bzip2-devel
        - readline-devel
        - autoconf
        - automake
        - patch
        - tidyp
        - make
        - re2c
        - file

    - name: phpenvダウンロード
      git: repo=https://github.com/CHH/phpenv.git dest={{ repos_dir }} version={{ branch }} accept_hostkey=yes

    - name: phpenvインストール
      shell: sh {{ repos_dir }}/bin/phpenv-install.sh

    - name: インストールされたphpenvを移動
      shell: cp -a /root/.phpenv {{ phpenv_dir }}

    - name: PHPENV_ROOTパス追加
      lineinfile: >
        dest=/etc/profile.d/phpenv.sh
        line='export PHPENV_ROOT="{{ phpenv_dir }}"'
        create=yes

    - name: phpパス追加
      lineinfile: >
        dest=/etc/profile.d/phpenv.sh
        line='export PATH="{{ phpenv_dir }}/bin:$PATH"'
        create=yes

    - name: phpenv init登録
      lineinfile: >
        dest=/etc/profile.d/phpenv.sh
        line='eval "$(phpenv init -)"' 
        create=yes

    - name: phpenv pluginsディレクトリを作成
      file: path={{ phpenv_dir }}/plugins force=yes state=directory

    - name: phpenv shimsディレクトリを作成
      file: path={{ phpenv_dir }}/shims force=yes state=directory

    - name: phpenv versionsディレクトリを作成
      file: path={{ phpenv_dir }}/versions force=yes state=directory

    - name: php-buildをphpenv/pluginsとしてインストール
      git: repo=https://github.com/CHH/php-build.git dest={{ phpenv_dir }}/plugins/php-build version={{ branch }} accept_hostkey=yes

    - name: phpenv-composerをphpenv/pluginsとしてインストール
      shell: git clone https://github.com/ngyuki/phpenv-composer.git chdir={{ phpenv_dir }}/plugins

    - name: phpenv パーミッション変更
      command: chmod 777 -R {{ phpenv_dir }}

    - name: PHPインストール
      shell: /bin/bash -lc "phpenv install {{ php_version }} && phpenv rehash && phpenv global {{ php_version }}"

    - name: laravelインストール
      shell: /bin/bash -lc 'composer global require "laravel/installer"'
